name: 'Deploy ML Infrastrucutre'
description: 'Deploys ML infrastructure via ARM and Bicep templates'
inputs:
  azure-credentials:
    description: 'Azure service principal credentials'
    required: true
  resource-group-name:
    description: 'Name of the resource group to deploy to'
    required: true
  keyvault-access-policy-target-object-id:
    description: 'The principal that will be granted access to the keyvault secrets'
    required: true
  ml-workspace-name:
    description: ''
    required: true
  keyvault-name:
    description: ''
    required: true
  storage-account-name:
    description: ''
    required: true
  compute-instance-name:
    description: ''
    required: true
  ml-cluster-name:
    description: ''
    required: true
  app-insights-name:
    description: ''
    required: true
  container-registry-name:
    description: ''
    required: true
  data-factory-name:
    description: ''
    required: true
  compute-instance-sku:
    description: ''
    required: true
  ml-cluster-sku:
    description: ''
    required: true
  ml-cluster-min-node-count:
    description: ''
    required: true
  ml-cluster-max-node-count:
    description: ''
    required: true
  ml-compute-assigned-user:
    description: ''
    required: false
  data-storage-account-name:
    description: ''
    required: true
  data-storage-container-name:
    description: ''
    required: true
  adls-blob-datastore-name:
    description: ''
    required: true

runs:
  using: 'composite'
  steps:
  - name: Deploy Bicep template
    shell: bash
    run: |
      DEPLOYMENT_NAME="mlops_deploy_$(date '+%F_%H_%M_%S')"
      az deployment group create -g "${{ resource-group-name }}" -n $DEPLOYMENT_NAME --template-file $GITHUB_WORKSPACE/infrastructure/main.bicep --parameters keyVaultAccessPolicyTargetObjectId=${{ keyvault-access-policy-target-object-id }} mlWorkspaceName=${{ ml-workspace-name }} keyVaultName=${{ keyvault-name }} storageAccountName=${{ storage-account-name }} computeInstanceName=${{ compute-instance-name }} mlClusterName=${{ ml-cluster-name }} appInsightsName=${{ app-insights-name }} containerRegistryName=${{ container-registry-name }} dataFactoryName=${{ data-factory-name }} computeInstanceSku=${{ compute-instance-sku }} mlClusterSku=${{ ml-cluster-sku }} mlClusterMinNodeCount=${{ ml-cluster-min-node-count}} mlClusterMaxNodeCount=${{ ml-cluster-max-node-count }} mlComputeAssignedUser=${{ ml-compute-assigned-user }} dataStorageAccountName=${{ data-storage-account-name }} dataStorageContainerName=${{ data-storage-container-name }} adlsBlobDataStoreName=${{ adls-blob-datastore-name }}

  - name: Deploy AML Datastore
    shell: bash
    run: |
      DEPLOYMENT_NAME="aml_datastore_$(date '+%F_%H_%M_%S')"
      az deployment group create -g "${{ resource-group.name }}" -n $DEPLOYMENT_NAME --template-file $GITHUB_WORKSPACE/infrastructure/aml-datastore.json --parameters amlWorkspaceName=${{ ml-workspace-name }} dataStoreName=${{ adls-blob-datastore-name }} storageAccountName=${{ data-storage-account-name }} containerName=${{ data-storage-container-name }}
